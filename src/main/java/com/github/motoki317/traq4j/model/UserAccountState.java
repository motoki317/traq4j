/*
 * traQ v3
 * traQ v3 API
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.github.motoki317.traq4j.model;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * ユーザーアカウント状態 0: 停止 1: 有効 2: 一時停止
 */
@JsonAdapter(UserAccountState.Adapter.class)
public enum UserAccountState {
  
  deactivated(0),
  
  active(1),
  
  suspended(2);

  private Integer value;

  UserAccountState(Integer value) {
    this.value = value;
  }

  public Integer getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static UserAccountState fromValue(Integer value) {
    for (UserAccountState b : UserAccountState.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<UserAccountState> {
    @Override
    public void write(final JsonWriter jsonWriter, final UserAccountState enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public UserAccountState read(final JsonReader jsonReader) throws IOException {
      Integer value = jsonReader.nextInt();
      return UserAccountState.fromValue(value);
    }
  }
}

