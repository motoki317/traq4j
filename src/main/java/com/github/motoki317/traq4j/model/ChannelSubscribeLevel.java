/*
 * traQ v3
 * traQ v3 API
 *
 * The version of the OpenAPI document: 3.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.github.motoki317.traq4j.model;

import java.util.Objects;
import java.util.Arrays;

import io.swagger.annotations.ApiModel;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * チャンネル購読レベル 0：無し 1：未読管理 2：未読管理+通知
 */
@JsonAdapter(ChannelSubscribeLevel.Adapter.class)
public enum ChannelSubscribeLevel {

    /**
     * 無し
     */
    none(0),

    /**
     * 未読管理
     */
    subscribed(1),

    /**
     * 未読管理+通知
     */
    notified(2);

    private final Integer value;

    ChannelSubscribeLevel(Integer value) {
        this.value = value;
    }

    public Integer getValue() {
        return value;
    }

    @Override
    public String toString() {
        return String.valueOf(value);
    }

    public static ChannelSubscribeLevel fromValue(Integer value) {
        for (ChannelSubscribeLevel b : ChannelSubscribeLevel.values()) {
            if (b.value.equals(value)) {
                return b;
            }
        }
        throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ChannelSubscribeLevel> {
        @Override
        public void write(final JsonWriter jsonWriter, final ChannelSubscribeLevel enumeration) throws IOException {
            jsonWriter.value(enumeration.getValue());
        }

        @Override
        public ChannelSubscribeLevel read(final JsonReader jsonReader) throws IOException {
            Integer value = jsonReader.nextInt();
            return ChannelSubscribeLevel.fromValue(value);
        }
    }
}

