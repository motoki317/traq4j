/*
 * traQ v3
 * traQ v3 API
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.github.motoki317.traq4j.model;

import java.util.Objects;
import java.util.Arrays;
import com.github.motoki317.traq4j.model.UserGroupMember;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import org.threeten.bp.OffsetDateTime;

/**
 * ユーザーグループ
 */
@ApiModel(description = "ユーザーグループ")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-06-05T14:52:47.663Z[GMT]")
public class UserGroup {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private UUID id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_MEMBERS = "members";
  @SerializedName(SERIALIZED_NAME_MEMBERS)
  private List<UserGroupMember> members = new ArrayList<>();

  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updatedAt";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private OffsetDateTime updatedAt;

  public static final String SERIALIZED_NAME_ADMINS = "admins";
  @SerializedName(SERIALIZED_NAME_ADMINS)
  private List<UUID> admins = new ArrayList<>();


  public UserGroup id(UUID id) {
    
    this.id = id;
    return this;
  }

   /**
   * グループUUID
   * @return id
  **/
  @ApiModelProperty(required = true, value = "グループUUID")

  public UUID getId() {
    return id;
  }


  public void setId(UUID id) {
    this.id = id;
  }


  public UserGroup name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * グループ名
   * @return name
  **/
  @ApiModelProperty(required = true, value = "グループ名")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public UserGroup description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * グループ説明
   * @return description
  **/
  @ApiModelProperty(required = true, value = "グループ説明")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public UserGroup type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * グループタイプ
   * @return type
  **/
  @ApiModelProperty(required = true, value = "グループタイプ")

  public String getType() {
    return type;
  }


  public void setType(String type) {
    this.type = type;
  }


  public UserGroup members(List<UserGroupMember> members) {
    
    this.members = members;
    return this;
  }

  public UserGroup addMembersItem(UserGroupMember membersItem) {
    this.members.add(membersItem);
    return this;
  }

   /**
   * グループメンバーの配列
   * @return members
  **/
  @ApiModelProperty(required = true, value = "グループメンバーの配列")

  public List<UserGroupMember> getMembers() {
    return members;
  }


  public void setMembers(List<UserGroupMember> members) {
    this.members = members;
  }


  public UserGroup createdAt(OffsetDateTime createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * 作成日時
   * @return createdAt
  **/
  @ApiModelProperty(required = true, value = "作成日時")

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public UserGroup updatedAt(OffsetDateTime updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * 更新日時
   * @return updatedAt
  **/
  @ApiModelProperty(required = true, value = "更新日時")

  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }


  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  public UserGroup admins(List<UUID> admins) {
    
    this.admins = admins;
    return this;
  }

  public UserGroup addAdminsItem(UUID adminsItem) {
    this.admins.add(adminsItem);
    return this;
  }

   /**
   * グループ管理者のUUIDの配列
   * @return admins
  **/
  @ApiModelProperty(required = true, value = "グループ管理者のUUIDの配列")

  public List<UUID> getAdmins() {
    return admins;
  }


  public void setAdmins(List<UUID> admins) {
    this.admins = admins;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserGroup userGroup = (UserGroup) o;
    return Objects.equals(this.id, userGroup.id) &&
        Objects.equals(this.name, userGroup.name) &&
        Objects.equals(this.description, userGroup.description) &&
        Objects.equals(this.type, userGroup.type) &&
        Objects.equals(this.members, userGroup.members) &&
        Objects.equals(this.createdAt, userGroup.createdAt) &&
        Objects.equals(this.updatedAt, userGroup.updatedAt) &&
        Objects.equals(this.admins, userGroup.admins);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, description, type, members, createdAt, updatedAt, admins);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserGroup {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    members: ").append(toIndentedString(members)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    admins: ").append(toIndentedString(admins)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

