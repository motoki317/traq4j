/*
 * traQ v3
 * traQ v3 API
 *
 * The version of the OpenAPI document: 3.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.github.motoki317.traq4j.model;

import java.util.Objects;
import java.util.Arrays;

import com.github.motoki317.traq4j.model.MessageStamp;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

import org.threeten.bp.OffsetDateTime;

/**
 * メッセージ
 */
@ApiModel(description = "メッセージ")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-05-18T11:58:46.174904Z[Etc/UTC]")
public class Message {
    public static final String SERIALIZED_NAME_ID = "id";
    @SerializedName(SERIALIZED_NAME_ID)
    private UUID id;

    public static final String SERIALIZED_NAME_USER_ID = "userId";
    @SerializedName(SERIALIZED_NAME_USER_ID)
    private UUID userId;

    public static final String SERIALIZED_NAME_CHANNEL_ID = "channelId";
    @SerializedName(SERIALIZED_NAME_CHANNEL_ID)
    private UUID channelId;

    public static final String SERIALIZED_NAME_CONTENT = "content";
    @SerializedName(SERIALIZED_NAME_CONTENT)
    private String content;

    public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
    @SerializedName(SERIALIZED_NAME_CREATED_AT)
    private OffsetDateTime createdAt;

    public static final String SERIALIZED_NAME_UPDATED_AT = "updatedAt";
    @SerializedName(SERIALIZED_NAME_UPDATED_AT)
    private OffsetDateTime updatedAt;

    public static final String SERIALIZED_NAME_PINNED = "pinned";
    @SerializedName(SERIALIZED_NAME_PINNED)
    private Boolean pinned;

    public static final String SERIALIZED_NAME_STAMPS = "stamps";
    @SerializedName(SERIALIZED_NAME_STAMPS)
    private List<MessageStamp> stamps = new ArrayList<>();

    public static final String SERIALIZED_NAME_THREAD_ID = "threadId";
    @SerializedName(SERIALIZED_NAME_THREAD_ID)
    private UUID threadId;


    public Message id(UUID id) {

        this.id = id;
        return this;
    }

    /**
     * メッセージUUID
     *
     * @return id
     **/
    @ApiModelProperty(required = true, value = "メッセージUUID")

    public UUID getId() {
        return id;
    }


    public void setId(UUID id) {
        this.id = id;
    }


    public Message userId(UUID userId) {

        this.userId = userId;
        return this;
    }

    /**
     * 投稿者UUID
     *
     * @return userId
     **/
    @ApiModelProperty(required = true, value = "投稿者UUID")

    public UUID getUserId() {
        return userId;
    }


    public void setUserId(UUID userId) {
        this.userId = userId;
    }


    public Message channelId(UUID channelId) {

        this.channelId = channelId;
        return this;
    }

    /**
     * チャンネルUUID
     *
     * @return channelId
     **/
    @ApiModelProperty(required = true, value = "チャンネルUUID")

    public UUID getChannelId() {
        return channelId;
    }


    public void setChannelId(UUID channelId) {
        this.channelId = channelId;
    }


    public Message content(String content) {

        this.content = content;
        return this;
    }

    /**
     * メッセージ本文
     *
     * @return content
     **/
    @ApiModelProperty(required = true, value = "メッセージ本文")

    public String getContent() {
        return content;
    }


    public void setContent(String content) {
        this.content = content;
    }


    public Message createdAt(OffsetDateTime createdAt) {

        this.createdAt = createdAt;
        return this;
    }

    /**
     * 投稿日時
     *
     * @return createdAt
     **/
    @ApiModelProperty(required = true, value = "投稿日時")

    public OffsetDateTime getCreatedAt() {
        return createdAt;
    }


    public void setCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
    }


    public Message updatedAt(OffsetDateTime updatedAt) {

        this.updatedAt = updatedAt;
        return this;
    }

    /**
     * 編集日時
     *
     * @return updatedAt
     **/
    @ApiModelProperty(required = true, value = "編集日時")

    public OffsetDateTime getUpdatedAt() {
        return updatedAt;
    }


    public void setUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }


    public Message pinned(Boolean pinned) {

        this.pinned = pinned;
        return this;
    }

    /**
     * ピン留めされているかどうか
     *
     * @return pinned
     **/
    @ApiModelProperty(required = true, value = "ピン留めされているかどうか")

    public Boolean getPinned() {
        return pinned;
    }


    public void setPinned(Boolean pinned) {
        this.pinned = pinned;
    }


    public Message stamps(List<MessageStamp> stamps) {

        this.stamps = stamps;
        return this;
    }

    public Message addStampsItem(MessageStamp stampsItem) {
        this.stamps.add(stampsItem);
        return this;
    }

    /**
     * 押されているスタンプの配列
     *
     * @return stamps
     **/
    @ApiModelProperty(required = true, value = "押されているスタンプの配列")

    public List<MessageStamp> getStamps() {
        return stamps;
    }


    public void setStamps(List<MessageStamp> stamps) {
        this.stamps = stamps;
    }


    public Message threadId(UUID threadId) {

        this.threadId = threadId;
        return this;
    }

    /**
     * スレッドUUID
     *
     * @return threadId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(required = true, value = "スレッドUUID")

    public UUID getThreadId() {
        return threadId;
    }


    public void setThreadId(UUID threadId) {
        this.threadId = threadId;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Message message = (Message) o;
        return Objects.equals(this.id, message.id) &&
                Objects.equals(this.userId, message.userId) &&
                Objects.equals(this.channelId, message.channelId) &&
                Objects.equals(this.content, message.content) &&
                Objects.equals(this.createdAt, message.createdAt) &&
                Objects.equals(this.updatedAt, message.updatedAt) &&
                Objects.equals(this.pinned, message.pinned) &&
                Objects.equals(this.stamps, message.stamps) &&
                Objects.equals(this.threadId, message.threadId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, userId, channelId, content, createdAt, updatedAt, pinned, stamps, threadId);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Message {\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
        sb.append("    channelId: ").append(toIndentedString(channelId)).append("\n");
        sb.append("    content: ").append(toIndentedString(content)).append("\n");
        sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
        sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
        sb.append("    pinned: ").append(toIndentedString(pinned)).append("\n");
        sb.append("    stamps: ").append(toIndentedString(stamps)).append("\n");
        sb.append("    threadId: ").append(toIndentedString(threadId)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

