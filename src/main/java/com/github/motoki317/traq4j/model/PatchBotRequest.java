/*
 * traQ v3
 * traQ v3 API
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.github.motoki317.traq4j.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.net.URI;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

/**
 * BOT情報変更リクエスト
 */
@ApiModel(description = "BOT情報変更リクエスト")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-06-05T13:16:54.379Z[GMT]")
public class PatchBotRequest {
  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_PRIVILEGED = "privileged";
  @SerializedName(SERIALIZED_NAME_PRIVILEGED)
  private Boolean privileged;

  public static final String SERIALIZED_NAME_ENDPOINT = "endpoint";
  @SerializedName(SERIALIZED_NAME_ENDPOINT)
  private URI endpoint;

  public static final String SERIALIZED_NAME_DEVELOPER_ID = "developerId";
  @SerializedName(SERIALIZED_NAME_DEVELOPER_ID)
  private UUID developerId;

  public static final String SERIALIZED_NAME_SUBSCRIBE_EVENTS = "subscribeEvents";
  @SerializedName(SERIALIZED_NAME_SUBSCRIBE_EVENTS)
  private List<String> subscribeEvents = null;


  public PatchBotRequest displayName(String displayName) {
    
    this.displayName = displayName;
    return this;
  }

   /**
   * BOTユーザー表示名
   * @return displayName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "BOTユーザー表示名")

  public String getDisplayName() {
    return displayName;
  }


  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public PatchBotRequest description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * BOTの説明
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "BOTの説明")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public PatchBotRequest privileged(Boolean privileged) {
    
    this.privileged = privileged;
    return this;
  }

   /**
   * 特権
   * @return privileged
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "特権")

  public Boolean getPrivileged() {
    return privileged;
  }


  public void setPrivileged(Boolean privileged) {
    this.privileged = privileged;
  }


  public PatchBotRequest endpoint(URI endpoint) {
    
    this.endpoint = endpoint;
    return this;
  }

   /**
   * BOTサーバーエンドポイント
   * @return endpoint
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "BOTサーバーエンドポイント")

  public URI getEndpoint() {
    return endpoint;
  }


  public void setEndpoint(URI endpoint) {
    this.endpoint = endpoint;
  }


  public PatchBotRequest developerId(UUID developerId) {
    
    this.developerId = developerId;
    return this;
  }

   /**
   * 移譲先の開発者UUID
   * @return developerId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "移譲先の開発者UUID")

  public UUID getDeveloperId() {
    return developerId;
  }


  public void setDeveloperId(UUID developerId) {
    this.developerId = developerId;
  }


  public PatchBotRequest subscribeEvents(List<String> subscribeEvents) {
    
    this.subscribeEvents = subscribeEvents;
    return this;
  }

  public PatchBotRequest addSubscribeEventsItem(String subscribeEventsItem) {
    if (this.subscribeEvents == null) {
      this.subscribeEvents = new ArrayList<String>();
    }
    this.subscribeEvents.add(subscribeEventsItem);
    return this;
  }

   /**
   * 購読するイベント
   * @return subscribeEvents
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "購読するイベント")

  public List<String> getSubscribeEvents() {
    return subscribeEvents;
  }


  public void setSubscribeEvents(List<String> subscribeEvents) {
    this.subscribeEvents = subscribeEvents;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PatchBotRequest patchBotRequest = (PatchBotRequest) o;
    return Objects.equals(this.displayName, patchBotRequest.displayName) &&
        Objects.equals(this.description, patchBotRequest.description) &&
        Objects.equals(this.privileged, patchBotRequest.privileged) &&
        Objects.equals(this.endpoint, patchBotRequest.endpoint) &&
        Objects.equals(this.developerId, patchBotRequest.developerId) &&
        Objects.equals(this.subscribeEvents, patchBotRequest.subscribeEvents);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, description, privileged, endpoint, developerId, subscribeEvents);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PatchBotRequest {\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    privileged: ").append(toIndentedString(privileged)).append("\n");
    sb.append("    endpoint: ").append(toIndentedString(endpoint)).append("\n");
    sb.append("    developerId: ").append(toIndentedString(developerId)).append("\n");
    sb.append("    subscribeEvents: ").append(toIndentedString(subscribeEvents)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

