/*
 * traQ v3
 * traQ v3 API
 *
 * The version of the OpenAPI document: 3.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.github.motoki317.traq4j.model;

import java.util.Objects;
import java.util.Arrays;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;

/**
 * サムネイル情報 サムネイルが存在しない場合はnullになります Deprecated: thumbnailsを参照してください
 */
@ApiModel(description = "サムネイル情報 サムネイルが存在しない場合はnullになります Deprecated: thumbnailsを参照してください")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-05-18T11:58:46.174904Z[Etc/UTC]")
public class FileInfoThumbnail {
    public static final String SERIALIZED_NAME_MIME = "mime";
    @SerializedName(SERIALIZED_NAME_MIME)
    private String mime;

    public static final String SERIALIZED_NAME_WIDTH = "width";
    @SerializedName(SERIALIZED_NAME_WIDTH)
    private Integer width;

    public static final String SERIALIZED_NAME_HEIGHT = "height";
    @SerializedName(SERIALIZED_NAME_HEIGHT)
    private Integer height;


    public FileInfoThumbnail mime(String mime) {

        this.mime = mime;
        return this;
    }

    /**
     * MIMEタイプ
     *
     * @return mime
     **/
    @ApiModelProperty(required = true, value = "MIMEタイプ")

    public String getMime() {
        return mime;
    }


    public void setMime(String mime) {
        this.mime = mime;
    }


    public FileInfoThumbnail width(Integer width) {

        this.width = width;
        return this;
    }

    /**
     * サムネイル幅
     *
     * @return width
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "サムネイル幅")

    public Integer getWidth() {
        return width;
    }


    public void setWidth(Integer width) {
        this.width = width;
    }


    public FileInfoThumbnail height(Integer height) {

        this.height = height;
        return this;
    }

    /**
     * サムネイル高さ
     *
     * @return height
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "サムネイル高さ")

    public Integer getHeight() {
        return height;
    }


    public void setHeight(Integer height) {
        this.height = height;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        FileInfoThumbnail fileInfoThumbnail = (FileInfoThumbnail) o;
        return Objects.equals(this.mime, fileInfoThumbnail.mime) &&
                Objects.equals(this.width, fileInfoThumbnail.width) &&
                Objects.equals(this.height, fileInfoThumbnail.height);
    }

    @Override
    public int hashCode() {
        return Objects.hash(mime, width, height);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class FileInfoThumbnail {\n");
        sb.append("    mime: ").append(toIndentedString(mime)).append("\n");
        sb.append("    width: ").append(toIndentedString(width)).append("\n");
        sb.append("    height: ").append(toIndentedString(height)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

