/*
 * traQ v3
 * traQ v3 API
 *
 * The version of the OpenAPI document: 3.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.github.motoki317.traq4j.model;

import java.util.Objects;
import java.util.Arrays;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.util.UUID;

import org.threeten.bp.OffsetDateTime;

/**
 * 未読チャンネル情報
 */
@ApiModel(description = "未読チャンネル情報")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-05-18T11:58:46.174904Z[Etc/UTC]")
public class UnreadChannel {
    public static final String SERIALIZED_NAME_CHANNEL_ID = "channelId";
    @SerializedName(SERIALIZED_NAME_CHANNEL_ID)
    private UUID channelId;

    public static final String SERIALIZED_NAME_COUNT = "count";
    @SerializedName(SERIALIZED_NAME_COUNT)
    private Integer count;

    public static final String SERIALIZED_NAME_NOTICEABLE = "noticeable";
    @SerializedName(SERIALIZED_NAME_NOTICEABLE)
    private Boolean noticeable;

    public static final String SERIALIZED_NAME_SINCE = "since";
    @SerializedName(SERIALIZED_NAME_SINCE)
    private OffsetDateTime since;

    public static final String SERIALIZED_NAME_UPDATED_AT = "updatedAt";
    @SerializedName(SERIALIZED_NAME_UPDATED_AT)
    private OffsetDateTime updatedAt;


    public UnreadChannel channelId(UUID channelId) {

        this.channelId = channelId;
        return this;
    }

    /**
     * チャンネルUUID
     *
     * @return channelId
     **/
    @ApiModelProperty(required = true, value = "チャンネルUUID")

    public UUID getChannelId() {
        return channelId;
    }


    public void setChannelId(UUID channelId) {
        this.channelId = channelId;
    }


    public UnreadChannel count(Integer count) {

        this.count = count;
        return this;
    }

    /**
     * 未読メッセージ数
     *
     * @return count
     **/
    @ApiModelProperty(required = true, value = "未読メッセージ数")

    public Integer getCount() {
        return count;
    }


    public void setCount(Integer count) {
        this.count = count;
    }


    public UnreadChannel noticeable(Boolean noticeable) {

        this.noticeable = noticeable;
        return this;
    }

    /**
     * 自分宛てメッセージが含まれているかどうか
     *
     * @return noticeable
     **/
    @ApiModelProperty(required = true, value = "自分宛てメッセージが含まれているかどうか")

    public Boolean getNoticeable() {
        return noticeable;
    }


    public void setNoticeable(Boolean noticeable) {
        this.noticeable = noticeable;
    }


    public UnreadChannel since(OffsetDateTime since) {

        this.since = since;
        return this;
    }

    /**
     * チャンネルの最古の未読メッセージの日時
     *
     * @return since
     **/
    @ApiModelProperty(required = true, value = "チャンネルの最古の未読メッセージの日時")

    public OffsetDateTime getSince() {
        return since;
    }


    public void setSince(OffsetDateTime since) {
        this.since = since;
    }


    public UnreadChannel updatedAt(OffsetDateTime updatedAt) {

        this.updatedAt = updatedAt;
        return this;
    }

    /**
     * チャンネルの最新の未読メッセージの日時
     *
     * @return updatedAt
     **/
    @ApiModelProperty(required = true, value = "チャンネルの最新の未読メッセージの日時")

    public OffsetDateTime getUpdatedAt() {
        return updatedAt;
    }


    public void setUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        UnreadChannel unreadChannel = (UnreadChannel) o;
        return Objects.equals(this.channelId, unreadChannel.channelId) &&
                Objects.equals(this.count, unreadChannel.count) &&
                Objects.equals(this.noticeable, unreadChannel.noticeable) &&
                Objects.equals(this.since, unreadChannel.since) &&
                Objects.equals(this.updatedAt, unreadChannel.updatedAt);
    }

    @Override
    public int hashCode() {
        return Objects.hash(channelId, count, noticeable, since, updatedAt);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class UnreadChannel {\n");
        sb.append("    channelId: ").append(toIndentedString(channelId)).append("\n");
        sb.append("    count: ").append(toIndentedString(count)).append("\n");
        sb.append("    noticeable: ").append(toIndentedString(noticeable)).append("\n");
        sb.append("    since: ").append(toIndentedString(since)).append("\n");
        sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

